import numpy as np
def sum_2_rows( M ):
 # คืนผลที่ได ้จากการรวมจ านวนในคอลัมน์เดียวกันของแถวที่ติดกันทีละคู่แถว
 # เชน่ M = [[ 0, 1, 2, 3], ได ้ [[ 4, 6, 8, 10],
 # [ 4, 5, 6, 7], [20, 22, 24, 26]]
 # [ 8, 9, 10, 11],
 # [12, 13, 14, 15]] 
    m = M[::2,:]
    n = M[1::2,:]
    return m+n
def sum_left_right( M ):
 # คนืผลทไี่ ดจ้ากการรวมจ านวนของครงึ่ ซา้ยกับครงึ่ ขวาของ M
 # เชน่ M = [[ 0, 1, 2, 3], ได ้ [[ 2, 4],
 # [ 4, 5, 6, 7], [10, 12],
 # [ 8, 9, 10, 11], [18, 20],
 # [12, 13, 14, 15]] [26, 28]]
    m = M[:,:np.shape(M)[1]//2]
    n = M[:,np.shape(M)[1]//2:]
    return m+n
def sum_upper_lower( M ):
 # คืนผลที่ได ้จากการรวมจ านวนของครึ่งบนกับครึ่งล่างของ M
 # เชน่ M = [[ 0, 1, 2, 3], ได ้ [[ 8, 10, 12, 14],
 # [ 4, 5, 6, 7], [16, 18, 20, 22]]
 # [ 8, 9, 10, 11],
 # [12, 13, 14, 15]]
    m = M[:np.shape(M)[0]//2,:]
    n = M[np.shape(M)[0]//2:,:]
    return m+n
def sum_4_quadrants( M ):
 # คืนผลที่ได ้จากการแบ่ง M เป็น 4 จตุภาค และรวมจ านวนที่ต าแหน่งตรงกันในแต่ละจตุภาค
 # เชน่ M = [[ 0, 1, 2, 3], ได ้ [[20, 24],
 # [ 4, 5, 6, 7], [36, 40]]
 # [ 8, 9, 10, 11],
 # [12, 13, 14, 15]]
    a = M[:np.shape(M)[0]//2,:np.shape(M)[1]//2]
    b = M[:np.shape(M)[0]//2,np.shape(M)[1]//2:]
    c = M[np.shape(M)[0]//2:,:np.shape(M)[1]//2]
    d = M[np.shape(M)[0]//2:,np.shape(M)[1]//2:]
    return a +b +c +d
def sum_4_cells( M ):
 # คืนผลที่ได ้จากการรวมจ านวนที่ติดกัน 4 ตัว ตามรูปแบบในตัวอย่างข ้างล่างนี้
 # เชน่ M = [[ 0, 1, 2, 3], ได ้ [[10, 18],
 # [ 4, 5, 6, 7], [42, 50]]
 # [ 8, 9, 10, 11],
 # [12, 13, 14, 15]]
    a = M[::2,::2]
    b = M[1::2,::2]
    c = M[1::2,1::2]
    d = M[::2,1::2]
    return a +b +c +d
def count_leap_years( years ):
 # years เป็นอาเรย์เก็บปี พ.ศ.
 # คืนจ านวนปีใน years ที่เป็นปีอทิกสุรทิน (ปีที่ ก.พ. มี 29 วัน)
    years = years - 543
    S = (years)%4 ==0
    S = S & np.logical_not((years % 100 == 0) & (years%400 != 0))
    return np.sum(S)
exec(input().strip())
# print(count_leap_years(np.array([2543,2559,2560])))